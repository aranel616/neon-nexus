# Neon Nexus Dim - Cyberpunk 2077 inspired Oh My Zsh theme
# Matches the "Neon Nexus Dim" Waybar and Mako themes
# Author: Generated by Claude Code

# Color definitions matching Waybar theme
local neon_orange='%F{208}'     # #ff6600 - primary accent
local neon_yellow='%F{220}'     # #ffd700 - clock/time
local neon_pink='%F{198}'       # #ff1493 - critical/urgent  
local neon_cyan='%F{51}'        # #00bfff - network/info
local neon_green='%F{46}'       # #00ff00 - success/battery
local electric_blue='%F{33}'    # #0099ff - secondary
local dark_gray='%F{240}'       # #585858 - muted text
local bright_white='%F{255}'    # #ffffff - main text
local reset_color='%f'

# Emoji symbols for cyberpunk aesthetic - working emojis
local lightning='⚡'
local cpu_symbol='🖥️'
local network_symbol='🌐'
local git_symbol='📁'
local arrow='▶'
local dot='●'

# Function to get git info with cyberpunk styling (no colors, handled by module)
function neon_git_info() {
    if git rev-parse --git-dir > /dev/null 2>&1; then
        local branch=$(git symbolic-ref --short HEAD 2>/dev/null || git describe --tags --exact-match 2>/dev/null || git rev-parse --short HEAD 2>/dev/null)
        local git_status=$(git status --porcelain 2>/dev/null)
        
        if [[ -n $git_status ]]; then
            # Dirty repo
            echo "${git_symbol} ${branch}"
        else
            # Clean repo  
            echo "${git_symbol} ${branch}"
        fi
    fi
}

# Function to get current time in cyberpunk style
function neon_time() {
    echo "${neon_yellow}[$(date '+%H:%M:%S')]${reset_color}"
}

# Function to show system load with actual CPU usage
function neon_load() {
    local cpu_usage=$(top -bn1 | grep "Cpu(s)" | sed "s/.*, *\([0-9.]*\)%* id.*/\1/" | awk '{print 100 - $1"%"}')
    echo "${cpu_symbol} ${cpu_usage}"
}

# Function to show network connectivity with status
function neon_network() {
    if ping -c 1 8.8.8.8 >/dev/null 2>&1; then
        echo "${network_symbol} online"
    else
        echo "${network_symbol} offline"
    fi
}

# Function to get battery status (no colors, handled by module)
function neon_battery() {
    if [[ -f /sys/class/power_supply/BAT0/capacity ]]; then
        local battery=$(cat /sys/class/power_supply/BAT0/capacity)
        echo "${battery}%"
    fi
}

# Powerline triangle - using Unicode like the example
local TRIANGLE=$'\ue0b0'

# Color definitions matching exact Waybar colors
# Waybar uses rgba(color, 0.15) - very subtle backgrounds with bright text

# Background colors - using very dark colors to match rgba(color, 0.15) transparency
local yellow_bg='236'        # Very dark gray (matches rgba(255, 215, 0, 0.15))
local orange_bg='236'        # Very dark gray (matches rgba(255, 102, 0, 0.15))
local cyan_bg='236'          # Very dark gray (matches rgba(0, 191, 255, 0.15))
local green_bg='236'         # Very dark gray (matches rgba(0, 255, 0, 0.15))

# Text colors - exact Waybar colors
local yellow_text='220'      # #ffd700 - bright gold (clock)
local orange_text='208'      # #ff6600 - bright orange (CPU)
local cyan_text='51'         # #00bfff - bright cyan (network)
local green_text='46'        # #00ff00 - bright green (battery/git)
local pink_text='198'        # #ff1493 - pink text

# Function to create powerline segment using the technique from your example
function powerline_segment() {
    local content="$1"
    local text_color="$2"
    local bg_color="$3"
    
    # Create segment: background + text + content
    echo "%K{${bg_color}}%F{${text_color}} ${content} %k%f"
}

# Function to create powerline transition - foreground=prev_bg, background=curr_bg
function powerline_transition() {
    local prev_bg="$1"
    local curr_bg="$2"
    
    # Triangle: foreground = previous segment bg, background = current segment bg
    echo "%F{${prev_bg}}%K{${curr_bg}}${TRIANGLE}%f%k"
}

# Main prompt construction - using your specified colors
function neon_prompt() {
    local git_info=$(neon_git_info)
    local battery_info=$(neon_battery)
    
    # Your colors:
    # #FFD700 = 220 (gold/yellow) - directory/time 
    # #FF6600 = 208 (orange) - load
    # #00BFFF = 51 (cyan) - network  
    # #00FF00 = 46 (green) - git
    
    local segments=""
    
    # Using exact Waybar RGBA backgrounds calculated to RGB and true color
    # Hostname: rgba(255, 20, 147, 0.15) = #260B14 background, #FF1493 text (pink for hostname)
    segments="${segments}%K{#260B14}%F{#FF1493} %m %F{#260B14}%K{#260F00}${TRIANGLE}%f%k"
    
    # Directory: rgba(255, 102, 0, 0.15) = #260F00 background, #FF6600 text (changed to orange)
    segments="${segments}%K{#260F00}%F{#FF6600} %~ %f%k"
    
    if [[ -n $git_info ]]; then
        # Git: rgba(0, 255, 0, 0.15) = #002600 background, #00FF00 text
        segments="${segments}%F{#260F00}%K{#002600}${TRIANGLE}%K{#002600}%F{#00FF00} ${git_info} %k%F{#002600}${TRIANGLE} %f"
    else
        # Final triangle from directory
        segments="${segments}%F{#260F00}${TRIANGLE} %f"
    fi
    
    echo "${segments}"
}

# Right prompt with additional info
function neon_rprompt() {
    local exit_code="%(?..${neon_pink}✗ %?${reset_color})"
    echo "${exit_code}"
}

# ASCII art banner for new sessions
function neon_banner() {
    echo ""
    echo "${neon_orange}   ███╗   ██╗███████╗ ██████╗ ███╗   ██╗    ${neon_cyan}███╗   ██╗███████╗██╗  ██╗██╗   ██╗███╗   ███╗"
    echo "${neon_orange}   ████╗  ██║██╔════╝██╔═══██╗████╗  ██║    ${neon_cyan}████╗  ██║██╔════╝╚██╗██╔╝██║   ██║████╗ ████║"
    echo "${neon_orange}   ██╔██╗ ██║█████╗  ██║   ██║██╔██╗ ██║    ${neon_cyan}██╔██╗ ██║█████╗   ╚███╔╝ ██║   ██║██╔████╔██║"
    echo "${neon_orange}   ██║╚██╗██║██╔══╝  ██║   ██║██║╚██╗██║    ${neon_cyan}██║╚██╗██║██╔══╝   ██╔██╗ ██║   ██║██║╚██╔╝██║"
    echo "${neon_orange}   ██║ ╚████║███████╗╚██████╔╝██║ ╚████║    ${neon_cyan}██║ ╚████║███████╗██╔╝ ██╗╚██████╔╝██║ ╚═╝ ██║"
    echo "${neon_orange}   ╚═╝  ╚═══╝╚══════╝ ╚═════╝ ╚═╝  ╚═══╝    ${neon_cyan}╚═╝  ╚═══╝╚══════╝╚═╝  ╚═╝ ╚═════╝ ╚═╝     ╚═╝"
    echo ""
    echo "${dark_gray}   ▶ Cyberpunk Terminal Interface ${neon_yellow}v2077.$(date +%j)${reset_color}"
    echo "${dark_gray}   ▶ System Online ${neon_green}${lightning}${reset_color} ${dark_gray}Neural Link Established${reset_color}"
    echo ""
}

# Set the prompts
PROMPT=$'$(neon_prompt)'
RPROMPT='$(neon_rprompt)'

# Banner disabled for clean terminal startup

# Customize ls colors to match theme - avoid yellow conflicts
export LSCOLORS="ExGxBxDxCxEgEdxbxgxcxd"
export LS_COLORS="di=1;34:ln=1;36:so=1;31:pi=1;35:ex=1;32:bd=1;34;46:cd=1;34;43:su=1;30;41:sg=1;30;46:tw=1;30;42:ow=1;30;43"

# Custom aliases with cyberpunk flair
alias matrix='cmatrix -C cyan'
alias hack='echo "${neon_green}ACCESSING MAINFRAME...${reset_color}" && sleep 1 && echo "${neon_orange}BYPASSING SECURITY...${reset_color}" && sleep 1 && echo "${neon_cyan}ACCESS GRANTED ${lightning}${reset_color}"'
alias neural='echo "${neon_pink}NEURAL INTERFACE ONLINE${reset_color}"'
alias cyber='echo "${neon_yellow}Welcome to the future, samurai.${reset_color}"'

# Enhanced git aliases with colors
alias gs="git status"
alias ga="git add"
alias gc="git commit"
alias gp="git push"
alias gl="git log --oneline --graph --color=always"

# System monitoring aliases
alias sysload='echo "${neon_orange}System Load:${reset_color}" && uptime'
alias netstat='echo "${neon_cyan}Network Status:${reset_color}" && ping -c 3 8.8.8.8'
alias diskspace='echo "${neon_yellow}Disk Usage:${reset_color}" && df -h'